1c1
< """ preferences.py:
---
> """ configuration.py:
8,9d7
< from elementtree import HTMLTreeBuilder
< import translation
27,49c25,32
<     __initialised = False
<     _language = None
<     def __init__(self, root_dir=None):
<         if not self.__initialised:
<             self.__initialised = True
<             self.root_dir = root_dir
<             translation.home = root_dir
<             self.styles = []
<             self.menu = None
<             self.config = SafeConfigParser()
<             self.changed = False
<             self.user_dir = os.path.join(os.path.expanduser("~"), ".crunchy")
<             if not os.path.exists(self.user_dir):  # first time ever
<                 self.create_path()
<             self.user_file = os.path.join(self.user_dir, "crunchy.cfg")
<             self.load()
<             self.home = "index.html" # English is default
<             self.options = "src/html/options.html"
<             translation.select('en')
<             if self._language == 'fr':
<                 self.home = "index_fr.html"
<                 self.options = "src/html/options_fr.html"
<                 translation.select('fr')
---
>     def __init__(self):
>         self.config = SafeConfigParser()
>         self.changed = False
>         self.user_dir = os.path.join(os.path.expanduser("~"), ".crunchy")
>         if not os.path.exists(self.user_dir):  # first time
>             self.create_path()
>         self.user_file = os.path.join(self.user_dir, "crunchy.cfg")
>         self.load()
113,117d95
<         if self._language is not None:
<             if self._language == lang:
<                 return
<             else:
<                 self.changed = True
120,128d97
<         if self._language == "en":
<             self.home = "index.html"
<             self.options = "src/html/options.html"
<         elif self._language == "fr":
<             self.home = "index_fr.html"
<             self.options = "src/html/options_fr.html"
<         translation.select(self._language)
<         self.extract_menu()
<         self.save()
143,159d111
<     def extract_menu(self):
<         filename = os.path.normpath(os.path.join(self.root_dir, self.home))
<         try:
<             tree = HTMLTreeBuilder.parse(filename)
<         except Exception, info:
<             print info
<         head = tree.find("head")
<         body = tree.find("body")
<         self.menu = body.find(".//div")
<         for link in head.findall('.//link'):
<             self.styles.append(link)
<         body.clear()
<         head.clear()
<         body.insert(0, self.menu)
<         for link in self.styles:
<             head.insert(0, link)
<         return
